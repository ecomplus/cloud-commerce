name: E2E tests

on:
  pull_request:
    paths:
      - "packages/**"
      - "!packages/storefront"
      - "!packages/ssr"
      - "!packages/feeds"
      - "!packages/passort"
      - "!packages/!18n"
      - "!packages/__skeleton"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/e2e-tests.yml"
      - "packages/**"
      - "!packages/storefront"
      - "!packages/ssr"
      - "!packages/feeds"
      - "!packages/passort"
      - "!packages/!18n"
      - "!packages/__skeleton"

jobs:
  setup:
    name: Test apps
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: ecomplus/store
          path: store

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - shell: bash
        run: pnpm fix-install

      - uses: actions/cache@v3
        with:
          path: |
            **/.turbo
            **/.cache/turbo
            packages/*/lib
            packages/apps/*/lib
            packages/apps/*/assets/*.min.js
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - shell: bash
        run: pnpm build
      
      - name: Get npm global directory
        id: npm-cache
        shell: bash
        run: |
          echo "GLOBAL_PATH=$(npm list -g | head -1)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: npm-cache-hit
        with:
          path: ${{ steps.npm-cache.outputs.GLOBAL_PATH }}
          key: ${{ runner.os }}-npm-global-firebase-tools-12.0.1

      - if: steps.cache.outputs.npm-cache-hit != 'true'
        shell: bash
        run: npm install -g firebase-tools@12.0.1

      - name: Build store and initialize emulators
        shell: bash
        env:
          ECOM_STORE_ID: ${{ secrets.ECOM_STORE_ID }}
          ECOM_AUTHENTICATION_ID: ${{ secrets.ECOM_AUTHENTICATION_ID }}
          ECOM_API_KEY: ${{ secrets.ECOM_API_KEY }}
        run: |
          cd store
          npm run build
          npx firebase --project=ecom2-002 emulators:start --only functions &

      - name: Run tests
        shell: bash
        run: |
          sleep 10
          cd packages/modules
          npm run test:e2e
          cd ../../

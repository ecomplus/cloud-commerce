name: E2E tests

on:
  pull_request:
    paths:
      - "packages/**"
      - "!package.json"
      - "!packages/storefront"
      - "!packages/ssr"
      - "!packages/feeds"
      - "!packages/passort"
      - "!packages/!18n"
      - "!packages/__skeleton"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/e2e-tests.yml"
      - "packages/**"
      - "!package.json"
      - "!packages/storefront"
      - "!packages/ssr"
      - "!packages/feeds"
      - "!packages/passort"
      - "!packages/!18n"
      - "!packages/__skeleton"

jobs:
  setup:
    name: Test apps
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '(deps):')

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: ecomplus/store
          path: store

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-paths
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-paths.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - shell: bash
        run: bash scripts/pre-install.sh && pnpm install --frozen-lockfile

      - uses: actions/cache@v3
        with:
          path: |
            **/.turbo
            **/.cache/turbo
            packages/*/lib
            packages/apps/*/lib
            packages/apps/*/assets/*.min.js
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - shell: bash
        env:
          ECOM_STORE_ID: ${{ secrets.ECOM_STORE_ID }}
          ECOM_AUTHENTICATION_ID: ${{ secrets.ECOM_AUTHENTICATION_ID }}
          ECOM_API_KEY: ${{ secrets.ECOM_API_KEY }}
        run: pnpm build

      - name: Get npm global directories
        id: npm-paths
        shell: bash
        run: |
          lib_path=$(npm list -g | head -1)
          echo "LIB_PATH=$lib_path" >> $GITHUB_OUTPUT
          echo "BIN_PATH=${lib_path/\/lib//bin}" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: npm-g-cache
        with:
          path: |
            ${{ steps.npm-paths.outputs.LIB_PATH }}
            ${{ steps.npm-paths.outputs.BIN_PATH }}
            ~/.npm-global/bin
          key: ${{ runner.os }}-npm-globals-firebase-tools-12.0.1

      - if: steps.npm-g-cache.outputs.cache-hit != 'true'
        shell: bash
        run: npm install -g firebase-tools@12.0.1

      - name: Initialize Firebase emulators
        shell: bash
        working-directory: store
        env:
          ECOM_STORE_ID: ${{ secrets.ECOM_STORE_ID }}
          ECOM_AUTHENTICATION_ID: ${{ secrets.ECOM_AUTHENTICATION_ID }}
          ECOM_API_KEY: ${{ secrets.ECOM_API_KEY }}
        run: |
          firebase --project=ecom2-002 emulators:start --only functions &

      - name: Run tests
        shell: bash
        run: |
          sleep 10
          pnpm test:e2e

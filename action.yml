name: 'Deploy Cloud Commerce to Firebase'
description: 'A GitHub Action to deploy https://github.com/ecomplus/cloud-commerce store to Firebase'

inputs:
  github-token:
    description: 'The `GITHUB_TOKEN` secret'
    required: true
  firebase-service-account:
    description: 'Firebase service account JSON'
    required: true
  ecom-authentication-id:
    description: 'E-Com Plus store authentication ID'
    required: true
  ecom-api-key:
    description: 'E-Com Plus store API key'
    required: true
  ecom-store-id:
    description: 'Store ID if not defined in config.json'
  deploy-codebase:
    description: 'Specific Firebase Functions codebase for partial deploy'
  mail-sender:
    description: 'Emails: sender email'
  mail-sender-name:
    description: 'Emails: sender name (default is store name)'
  mail-reply-to:
    description: 'Emails: Reply email'
  smpt-host: 
    description: 'Emails: SMTP hostname'
  smpt-port: 
    description: 'Emails: SMTP port number'
  smpt-user: 
    description: 'Emails: SMTP username'
  smpt-pass: 
    description: 'Emails: SMTP password'
  sendgrid-api-key:
    description: 'App: SendGrid API key'
  tiny-erp-token:
    description: 'App: Tiny ERP API token'
  galaxpay-partner-id:
    description: 'App: Optional Galax Pay partner ID'
  galaxpay-partner-hash:
    description: 'App: Optional Galax Pay partner hash'
  datafrete-operator-token:
    description: 'App: Random token (https://randomkeygen.com/) to validate Datafrete webhooks'

outputs: {}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - if: github.event_name == 'push'
      shell: bash
      run: npm i --location=global firebase-tools@11

    - shell: bash
      run: npm ci --omit=dev

    - shell: bash
      working-directory: functions
      env:
        ECOM_STORE_ID: ${{ inputs.ecom-store-id }}
      run: |
        for d in */ ; do
          cd $d
          npm ci
          cd ..
        done
        echo "ecom_store_id=${ECOM_STORE_ID:-$(cat config.json | jq -r '.storeId')}" >> $GITHUB_ENV

    - uses: dorny/paths-filter@v2.11.1
      id: changes
      with:
        filters: |
          core:
            - 'functions/core/**'
          events:
            - 'functions/events/**'
          modules:
            - 'functions/modules/**'
          passport:
            - 'functions/passport/**'
          ssr:
            - 'functions/ssr/**'
    
    - if: steps.changes.outputs.core != 'true'
      shell: bash
      env:
        DEPLOY_CODEBASE: ${{ inputs.deploy-codebase }}
        CHS_EVENTS: ${{ steps.changes.outputs.events }}
        CHS_MODULES: ${{ steps.changes.outputs.modules }}
        CHS_PASSPORT: ${{ steps.changes.outputs.passport }}
        CHS_SSR: ${{ steps.changes.outputs.ssr }}
      run: |
        if [ -z "$DEPLOY_CODEBASE" ]; then
          deploy_codebase=$(node -p "\
            const changes = ['$CHS_SSR', '$CHS_MODULES', '$CHS_EVENTS', '$CHS_PASSPORT']; \
            let codebase = ''; \
            if (changes.filter(v => v === 'true').length === 1) { \
              switch (changes.findIndex(v => v === 'true')) {\
                case 0: codebase = 'ssr'; break; \
                case 1: codebase = 'modules'; break; \
                case 2: codebase = 'events'; break; \
                case 3: codebase = 'passport'; break; \
              } \
            } \
            codebase;")
        else
          deploy_codebase=$DEPLOY_CODEBASE
        fi
        echo "deploy_codebase=$deploy_codebase" >> $GITHUB_ENV

    - if: github.event_name == 'push'
      name: Deploy to Firebase live
      shell: bash
      env:
        ECOM_STORE_ID: ${{ env.ecom_store_id }}
        DEPLOY_CODEBASE: ${{ env.deploy_codebase }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        FIREBASE_SERVICE_ACCOUNT: ${{ inputs.firebase-service-account }}
        ECOM_AUTHENTICATION_ID: ${{ inputs.ecom-authentication-id }}
        ECOM_API_KEY: ${{ inputs.ecom-api-key }}
        MAIL_SENDER: ${{ inputs.mail-sender }}
        MAIL_SENDER_NAME: ${{ inputs.mail-sender-name }}
        MAIL_REPLY_TO: ${{ inputs.mail-reply-to }}
        SMTP_HOST: ${{ inputs.smpt-host }}
        SMTP_PORT: ${{ inputs.smpt-port }}
        SMTP_USER: ${{ inputs.smpt-user }}
        SMTP_PASS: ${{ inputs.smpt-pass }}
        SENDGRID_API_KEY: ${{ inputs.sendgrid-api-key }}
        TINY_ERP_TOKEN: ${{ inputs.tiny-erp-token }}
        GALAXPAY_PARTNER_ID: ${{ inputs.galaxpay-partner-id }}
        GALAXPAY_PARTNER_HASH: ${{ inputs.galaxpay-partner-hash }}
        DATAFRETE_OPERATOR_TOKEN: ${{ inputs.datafrete-operator-token }}
      run: |
        export GAC_FILENAME=".gac-$RANDOM.json"
        echo $FIREBASE_SERVICE_ACCOUNT > $GAC_FILENAME
        printf "DEPLOY_RAND=$RANDOM.$RANDOM
        ECOM_AUTHENTICATION_ID=$ECOM_AUTHENTICATION_ID
        ECOM_API_KEY=$ECOM_API_KEY
        ECOM_STORE_ID=$ECOM_STORE_ID
        GITHUB_TOKEN=$GITHUB_TOKEN
        DEPLOY_CODEBASE=$DEPLOY_CODEBASE
        MAIL_SENDER=$MAIL_SENDER
        MAIL_SENDER_NAME=$MAIL_SENDER_NAME
        MAIL_REPLY_TO=$MAIL_REPLY_TO
        SMTP_HOST=$SMTP_HOST
        SMTP_PORT=$SMTP_PORT
        SMTP_USER=$SMTP_USER
        SMTP_PASS=$SMTP_PASS
        SENDGRID_API_KEY=$SENDGRID_API_KEY
        TINY_ERP_TOKEN=$TINY_ERP_TOKEN
        GALAXPAY_PARTNER_ID=$GALAXPAY_PARTNER_ID
        GALAXPAY_PARTNER_HASH=$GALAXPAY_PARTNER_HASH
        DATAFRETE_OPERATOR_TOKEN=$DATAFRETE_OPERATOR_TOKEN
        " > functions/.env
        if [ -z "$DEPLOY_CODEBASE" ]; then
          GOOGLE_APPLICATION_CREDENTIALS=$GAC_FILENAME npm run deploy -- \
            --only functions --codebase $DEPLOY_CODEBASE
          if [ $DEPLOY_CODEBASE == "ssr" ]; then
            npx firebase deploy --only hosting
          fi
        else
          GOOGLE_APPLICATION_CREDENTIALS=$GAC_FILENAME npm run deploy
        fi

    - if: github.event_name == 'pull_request'
      shell: bash
      env:
        ECOM_STORE_ID: ${{ env.ecom_store_id }}
      run: |
        printf "DEPLOY_RAND=$RANDOM.$RANDOM
        ECOM_STORE_ID=$ECOM_STORE_ID
        " > functions/ssr/.env
        if [ ! -f ".firebaserc" ]; then
          echo '{ "projects": { "default": "ecom2-002" } }' > .firebaserc
        fi
        npm --prefix "functions/ssr/" run build:static && npm run build -- --codebase ssr

    - if: github.event_name == 'pull_request'
      name: Deploy Firebase Hosting PR preview
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ inputs.github-token }}
        firebaseServiceAccount: ${{ inputs.firebase-service-account }}

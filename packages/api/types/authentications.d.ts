/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Authentications {
  _id: string & { length: 24 };
  created_at: string;
  updated_at: string;
  /**
   * @maxItems 500
   */
  store_ids: number[];
  /**
   * Simple username for identification, only numbers and lowercase letters
   */
  username: string;
  /**
   * User language two letter code, sometimes with region, eg.: pt_br, fr, en_us
   */
  locale?: string;
  /**
   * User email address
   */
  email?: string;
  /**
   * User full name
   */
  name?: string;
  /**
   * User phone number
   */
  phone?: string;
  /**
   * MD5 hash generated with the user's password
   */
  pass_md5_hash?: string;
  /**
   * API key as a random 128 bytes hexadecimal number
   */
  api_key?: string;
  /**
   * Collection of resources allowed to user, each resource uri as object property
   */
  permissions?: {
    /**
     * Resource/Subresources/Third-level/ID
     *
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^(([^/_][a-z0-9/_@:$+]{1,60}[^/])|[*])$".
     */
    [k: string]: ('all' | 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE')[];
  };
  /**
   * List of dashboard cards chosen by user
   *
   * @maxItems 40
   */
  panel_cards?: {
    /**
     * Unique identifier, card name using only lowercase, numbers and underscore
     */
    card_id: string;
    /**
     * Card title
     */
    title?: string;
    /**
     * Card text, usually a brief description
     */
    paragraph?: string;
    /**
     * Custom card calling MongoDB aggregate
     */
    custom_aggregation?: {
      /**
       * API resource
       */
      resource: 'products' | 'categories' | 'brands' | 'collections' | 'grids' | 'customers' | 'carts' | 'orders';
      /**
       * Aggregation pipeline
       *
       * @minItems 1
       * @maxItems 50
       */
      pipeline: {
        [k: string]: unknown;
      }[];
    };
  }[];
  /**
   * Whether the user is able to use builder and file manager to edit storefront
   */
  edit_storefront?: boolean;
  /**
   * Flags to associate additional info
   *
   * @maxItems 10
   */
  flags?: string[];
  /**
   * Optional notes with additional info about this user
   */
  notes?: string;
}

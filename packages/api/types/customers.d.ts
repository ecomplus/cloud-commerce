/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Customer object model
 */
export interface Customers {
  /**
   * Customer ID (ObjectID) [auto]
   */
  _id: string & { length: 24 };
  /**
   * When object was seted (POST/PUT), date and time in ISO 8601 standard representation [auto]
   */
  created_at: string;
  /**
   * When was it last changed, date and time in ISO 8601 standard representation [auto]
   */
  updated_at: string;
  /**
   * ID of store [auto]
   */
  store_id: number;
  /**
   * Whether customer was registered by staff and is trusted
   */
  staff_signature?: boolean;
  /**
   * The state of registration, if completed, invited and waiting, or declined by customer
   */
  state?: 'invited' | 'registered' | 'declined';
  /**
   * Whether customer account is enabled to make orders
   */
  enabled?: boolean;
  /**
   * Whether the customer can sign in to the store with this account
   */
  login?: boolean;
  /**
   * Status defined by seller, such as active or blocked
   */
  status?: string;
  /**
   * Code to identify the affiliate that referred the customer
   */
  affiliate_code?: string;
  /**
   * UTM campaign HTTP parameters associated with this customer's first access
   */
  utm?: {
    /**
     * Parameter 'utm_source', the referrer: (e.g. 'google', 'newsletter')
     */
    source?: string;
    /**
     * Parameter 'utm_medium', the marketing medium: (e.g. 'cpc', 'banner', 'email')
     */
    medium?: string;
    /**
     * Parameter 'utm_campaign', the product, promo code, or slogan (e.g. 'spring_sale')
     */
    campaign?: string;
    /**
     * Parameter 'utm_term', identifies the paid keywords
     */
    term?: string;
    /**
     * Parameter 'utm_content', used to differentiate ads
     */
    content?: string;
  };
  /**
   * Providers for OAuth authentication
   *
   * @maxItems 20
   */
  oauth_providers?: {
    /**
     * The provider with which the user authenticated, e.g.: 'facebook'
     */
    provider: string;
    /**
     * Unique ID for the user generated by the service provider
     */
    user_id: string;
  }[];
  /**
   * Customer language two letters code, sometimes with region, e.g.: 'pt_br', 'fr', 'en_us'
   */
  locale?: string;
  /**
   * Customer main email address
   */
  main_email: string;
  /**
   * Customer email addresses list
   *
   * @maxItems 20
   */
  emails?: {
    /**
     * The actual email address
     */
    address: string;
    /**
     * The type of email
     */
    type?: 'home' | 'personal' | 'work' | 'other';
    /**
     * States whether or not the email address has been verified
     */
    verified?: boolean;
  }[];
  /**
   * Indicates whether customer would like to receive email updates from the shop
   */
  accepts_marketing?: boolean;
  /**
   * The name of this Customer, suitable for display
   */
  display_name: string;
  /**
   * Customer name object
   */
  name?: {
    /**
     * The family name of this user, or "last name"
     */
    family_name?: string;
    /**
     * The "first name" of this user
     */
    given_name?: string;
    /**
     * The middle name(s) of this user
     */
    middle_name?: string;
  };
  /**
   * Date of customer birth
   */
  birth_date?: {
    /**
     * Day of birth
     */
    day?: number;
    /**
     * Number of month of birth
     */
    month?: number;
    /**
     * Year of birth
     */
    year?: number;
  };
  /**
   * Customer preferred pronoun
   */
  pronoun?: 'he' | 'she';
  /**
   * User profile pictures
   *
   * @maxItems 20
   */
  photos?: string[];
  /**
   * List of customer phone numbers
   *
   * @maxItems 20
   */
  phones?: {
    /**
     * Country calling code (without +), defined by standards E.123 and E.164
     */
    country_code?: number;
    /**
     * The actual phone number, digits only
     */
    number: string;
    /**
     * The type of phone
     */
    type?: 'home' | 'personal' | 'work' | 'other';
  }[];
  /**
   * Physical or juridical (company) person
   */
  registry_type?: 'p' | 'j';
  /**
   * Country of document origin, an ISO 3166-2 code
   */
  doc_country?: string;
  /**
   * Responsible person or organization document number (only numbers)
   */
  doc_number?: string;
  /**
   * Municipal or state registration if exists
   */
  inscription_type?: 'State' | 'Municipal';
  /**
   * Municipal or state registration number (with characters) if exists
   */
  inscription_number?: string;
  /**
   * Registered company name or responsible fullname
   */
  corporate_name?: string;
  /**
   * List of customer shipping addresses
   *
   * @maxItems 40
   */
  addresses?: {
    /**
     * ZIP (CEP, postal...) code
     */
    zip: string;
    /**
     * Street or public place name
     */
    street?: string;
    /**
     * House or building street number
     */
    number?: number;
    /**
     * Address complement or second line, such as apartment number
     */
    complement?: string;
    /**
     * Borough name
     */
    borough?: string;
    /**
     * Some optional other reference for this address
     */
    near_to?: string;
    /**
     * Full in line mailing address, should include street, number and borough
     */
    line_address?: string;
    /**
     * City name
     */
    city?: string;
    /**
     * Country name
     */
    country?: string;
    /**
     * An ISO 3166-2 country code
     */
    country_code?: string;
    /**
     * Province or state name
     */
    province?: string;
    /**
     * The two-letter code for the province or state
     */
    province_code?: string;
    /**
     * The name of recipient, generally is the customer's name
     */
    name?: string;
    /**
     * The recipient's last name
     */
    last_name?: string;
    /**
     * Customer phone number for this mailing address
     */
    phone?: {
      /**
       * Country calling code (without +), defined by standards E.123 and E.164
       */
      country_code?: number;
      /**
       * The actual phone number, digits only
       */
      number: string;
    };
    /**
     * Indicates whether this address is the default address for the customer
     */
    default?: boolean;
  }[];
  /**
   * Products marked as favorites
   *
   * @maxItems 3000
   */
  favorites?: string[];
  /**
   * Last products visited by the customer
   *
   * @maxItems 100
   */
  last_visited_products?: string[];
  /**
   * Last terms searched on shop by the customer
   *
   * @maxItems 100
   */
  last_searched_terms?: string[];
  /**
   * Default currency for the user, designator according to ISO 4217 (3 uppercase letters)
   */
  currency_id?: string;
  /**
   * Graphic symbol used as a shorthand for currency's name
   */
  currency_symbol?: string;
  /**
   * Total number of orders completed by this customer
   */
  orders_count?: number;
  /**
   * The total amount in orders completed by this customer
   */
  orders_total_value?: number;
  /**
   * List of customer accumulated loyalty points by program and expiration
   *
   * @maxItems 1000
   */
  loyalty_points_entries?: {
    /**
     * The name of the loyalty points program
     */
    name?: string;
    /**
     * Unique identifier, program name using only lowercase, numbers and underscore
     */
    program_id: string;
    /**
     * Number of loyalty points earned
     */
    earned_points?: number;
    /**
     * Number of active (not yet used) loyalty points
     */
    active_points: number;
    /**
     * The ratio of a point when converted to currency
     */
    ratio?: number;
    /**
     * Validity of the points entry, until this date the active points can be converted
     */
    valid_thru?: string;
    /**
     * Points origin order ID (ObjectID)
     */
    order_id?: string & { length: 24 };
  }[];
  /**
   * The total amount of money that this customer has spent at the store
   */
  total_spent?: number;
  /**
   * The total amount in cancelled orders
   */
  total_cancelled?: number;
  /**
   * List of customer orders
   *
   * @maxItems 1000
   */
  orders?: {
    /**
     * Order ID (ObjectID)
     */
    _id: string & { length: 24 };
    /**
     * When order was saved, date and time in ISO 8601 standard representation
     */
    created_at?: string;
    /**
     * Auto incremented order number
     */
    number?: number;
    /**
     * Designator of currency according to ISO 4217 (3 uppercase letters)
     */
    currency_id?: string;
    /**
     * Graphic symbol used as a shorthand for currency's name
     */
    currency_symbol?: string;
    /**
     * Object with sums of values
     */
    amount?: {
      /**
       * Order total amount
       */
      total: number;
      /**
       * The sum of all items prices
       */
      subtotal?: number;
      /**
       * Order freight cost
       */
      freight?: number;
      /**
       * Applied discount value
       */
      discount?: number;
      /**
       * Value deducted via balance in wallet or loyalty points
       */
      balance?: number;
      /**
       * The sum of all the taxes applied to the order
       */
      tax?: number;
      /**
       * Sum of optional extra costs applied
       */
      extra?: number;
    };
    /**
     * Name or summary of order payment method(s)
     */
    payment_method_label?: string;
    /**
     * Name of order shipping method(s)
     */
    shipping_method_label?: string;
  }[];
  /**
   * List of customer saved credit cards
   *
   * @maxItems 40
   */
  credit_cards?: {
    /**
     * Full name of the holder, as it is on the credit card
     */
    holder_name?: string;
    /**
     * Issuer identification number (IIN), known as bank identification number (BIN)
     */
    bin?: number;
    /**
     * Credit card issuer name, eg.: Visa, American Express, MasterCard
     */
    company?: string;
    /**
     * Last digits (up to 4) of credit card number
     */
    last_digits: string;
    /**
     * Unique credit card token
     */
    token: string;
    /**
     * Payment intermediator
     */
    intermediator: {
      /**
       * Gateway name standardized as identification code
       */
      code: string;
      /**
       * ID of respective customer account in the intermediator
       */
      buyer_id?: string;
    };
  }[];
  /**
   * List of custom attributes
   *
   * @maxItems 100
   */
  metafields?: {
    /**
     * String to help distinguish who (or which app) created and can use the metafield
     */
    namespace?: string;
    /**
     * Field name
     */
    field?: string;
    /**
     * Custom property value
     */
    value: {
      [k: string]: unknown;
    };
  }[];
  /**
   * List of custom attributes
   *
   * @maxItems 100
   */
  hidden_metafields?: {
    /**
     * String to help distinguish who (or which app) created and can use the metafield
     */
    namespace?: string;
    /**
     * Field name
     */
    field?: string;
    /**
     * Custom property value
     */
    value: {
      [k: string]: unknown;
    };
  }[];
  /**
   * Flags to associate additional info
   *
   * @maxItems 10
   */
  flags?: string[];
  /**
   * Optional notes with additional info about this customer
   */
  notes?: string;
  /**
   * Description and notes about this customer, available only for shop administrators
   */
  staff_notes?: string;
}

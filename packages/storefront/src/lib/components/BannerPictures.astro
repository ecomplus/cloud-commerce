---
import type { Props as UseBannerProps } from '@@sf/composables/use-banner';
import Picture from '@@sf/components/Picture.astro';

export type Props = UseBannerProps & {
  index?: number;
  widths?: number[];
  class?: string;
  mobileWidths?: number[];
  mobileClass?: string;
  isHalfSize?: boolean;
};

const {
  img,
  alt,
  mobileImg,
  title,
  subtitle,
  buttonText,
  index,
  mobileClass,
} = Astro.props as Props;
const hasHeader = Boolean(title || subtitle || buttonText);
const isHalfSize = Astro.props.isHalfSize || hasHeader;
let { widths, mobileWidths } = Astro.props;
let className = Astro.props.class;
if (!className) {
  if (isHalfSize) {
    className = 'max-w-screen-sm sm:max-w-[828px] lg:max-w-screen-xl';
  } else {
    className = 'max-w-screen-sm sm:max-w-[828px] md:max-w-screen-2xl 2xl:max-w-[1920px]';
  }
}
if (!widths?.length) {
  if (mobileImg) {
    widths = isHalfSize ? [828, 1280] : [1536, 2048];
  } else {
    widths = isHalfSize ? [640, 828, 1280] : [640, 828, 1536, 2048];
  }
}
if (!mobileWidths?.length) {
  mobileWidths = [640, 1024];
}
---

{img
  && <Picture
    src={img}
    alt={alt || ''}
    widths={widths}
    fetchpriority={index === 0 ? 'high' : 'low'}
    loading={index === 0 ? 'eager' : 'lazy'}
    class={`${(mobileImg ? 'hidden md:block ' : '')}mx-auto
    text-sm text-opacity-70 ${className}`}
  />
}
{mobileImg
  && <Picture
    src={mobileImg}
    alt={alt || ''}
    widths={mobileWidths}
    fetchpriority={index === 0 ? 'high' : 'low'}
    loading={index === 0 ? 'eager' : 'lazy'}
    class={`mx-auto text-sm text-opacity-70 md:hidden
    ${(mobileClass || 'max-w-screen-sm sm:max-w-screen-lg')}`}
  />
}

---
import * as url from 'node:url';
import { join as joinPath } from 'node:path';
import { readFileSync } from 'node:fs';
import '@@sf/assets/reset.css';
import '@@sf/assets/base.css';
import '@@sf/assets/forms.css';
import '@@sf/assets/components.css';
import '@@sf/assets/tooltip.css';
// import 'uno.css';
import Picture from '@@sf/components/Picture.astro';

const __dirname = url.fileURLToPath(new URL('.', import.meta.url));
const pkgJson = readFileSync(joinPath(__dirname, '../../../package.json'), 'utf-8');
const {
  name: pkgName,
  version: pkgVersion,
} = JSON.parse(pkgJson);
const getInlineVersionLog = () => {
  return `console.log('%c${pkgName} v${pkgVersion}', 'font-weight:bold')`;
};
const { settings } = Astro.locals.routeContext;
---

<body style="visibility:hidden" class="!visible"> <!-- Prevent FOUC -->
  <div id="teleported-overlap" class="relative z-[59]"></div>
  <div id="teleported-top" class="relative z-[19]"></div>
  <slot />
  <slot name="before-body-end" />
  <div id="teleported-bottom" class="relative z-[19]"></div>
  {settings.icon
    && <Picture
      src={settings.icon}
      alt="Icon"
      formats={['png']}
      widths={[32, 192, 512]}
      sizes="32px"
      class="absolute hidden"
      style="bottom: -1000px"
      hasImg={false}
    />
  }
  <script is:inline set:html={getInlineVersionLog()} />
</body>

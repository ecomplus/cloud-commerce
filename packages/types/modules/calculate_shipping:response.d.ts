/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Response - Triggered to calculate shipping options, must return calculated values and times
 */
export interface CalculateShippingResponse {
  /**
   * Optional minimum cart subtotal to earn free shipping with some shipping service
   */
  free_shipping_from_value?: number;
  /**
   * Shipping method options list
   *
   * @maxItems 30
   */
  shipping_services: {
    /**
     * Name of shipping method shown to customers
     */
    label: string;
    /**
     * Carrier name
     */
    carrier?: string;
    /**
     * Carrier document number (only numbers)
     */
    carrier_doc_number?: string;
    /**
     * Name of service (shipping method) defined by carrier
     */
    service_name?: string;
    /**
     * Code of service defined by carrier
     */
    service_code?: string;
    /**
     * Contract number of the shop with carrier, if exists
     */
    contract?: string;
    /**
     * Shipping method icon image URI
     */
    icon?: string;
    /**
     * Order shipping line object
     */
    shipping_line: {
      from: Address;
      to: Address1;
      /**
       * Shipping object information
       */
      package?: {
        /**
         * Package dimensions
         */
        dimensions?: {
          /**
           * Package width, height and length
           *
           * This interface was referenced by `undefined`'s JSON-Schema definition
           * via the `patternProperty` "^width|height|length$".
           */
          [k: string]: {
            /**
             * Size in specified unit
             */
            value: number;
            /**
             * Unit of measurement
             */
            unit?: 'mm' | 'cm' | 'm' | 'ft' | 'in' | 'yd' | 'mi';
          };
        };
        /**
         * Package weight for freight calculation
         */
        weight?: {
          /**
           * Size in specified unit
           */
          value: number;
          /**
           * Unit of measurement
           */
          unit?: 'mg' | 'g' | 'kg' | 'lb' | 'oz';
        };
      };
      /**
       * Pick up option when no (or optional) freight
       */
      pick_up?: 'store' | 'locker' | 'point' | 'other';
      /**
       * Freight cost for this shipping line, without additionals
       */
      price?: number;
      /**
       * The package value declared to carrier, generally the sum of all items prices
       */
      declared_value?: number;
      /**
       * Cost for the "declared value" additional service
       */
      declared_value_price?: number;
      /**
       * Whether the package must be delivered with additional service "own hand"
       */
      own_hand?: boolean;
      /**
       * Cost for the "own hand" additional service
       */
      own_hand_price?: number;
      /**
       * If the package will be delivered with acknowledgment of receipt
       */
      receipt?: boolean;
      /**
       * Cost for the "acknowledgment of receipt" additional service
       */
      receipt_price?: number;
      /**
       * List of other additional services for this shipping line
       *
       * @maxItems 30
       */
      other_additionals?: {
        /**
         * Tag to identify object, use only lowercase letters, digits and underscore
         */
        tag?: string;
        /**
         * Name of the additional service
         */
        label: string;
        /**
         * Cost for this additional service
         */
        price?: number;
      }[];
      /**
       * List of taxes or other additional services for this shipping line
       *
       * @maxItems 30
       */
      taxes?: {
        /**
         * Tag to identify object, use only lowercase letters, digits and underscore
         */
        tag?: string;
        /**
         * Tax title
         */
        label: string;
        /**
         * Tax value applied
         */
        price?: number;
        /**
         * Tax rate as a function of package value
         */
        rate?: number;
      }[];
      /**
       * Discount on shipping price, negative if value was additionated (not discounted)
       */
      discount?: number;
      /**
       * Total cost for this shipping line, with additionals and taxes
       */
      total_price?: number;
      /**
       * Deadline for sending the package
       */
      posting_deadline?: {
        /**
         * Number of days to post the product after purchase
         */
        days: number;
        /**
         * If the deadline is calculated in working days
         */
        working_days?: boolean;
        /**
         * Whether days will be counted after payment approval
         */
        after_approval?: boolean;
      };
      /**
       * Estimated delivery time
       */
      delivery_time?: {
        /**
         * Number of days for delivery after shipping
         */
        days: number;
        /**
         * If the deadline is calculated in working days
         */
        working_days?: boolean;
      };
      /**
       * Date range when delivery will be made
       */
      scheduled_delivery?: {
        /**
         * Scheduled date and time on the ISO 8601 representation
         *
         * This interface was referenced by `undefined`'s JSON-Schema definition
         * via the `patternProperty` "^start|end$".
         */
        [k: string]: string;
      };
      /**
       * Additional text instructions for pick up or custom delivery process
       */
      delivery_instructions?: string;
      /**
       * For multi DC, set warehouse where the stock will be handled
       */
      warehouse_code?: string;
      /**
       * Flags to associate additional info
       *
       * @maxItems 10
       */
      flags?: string[];
      /**
       * List of custom fields
       *
       * @maxItems 10
       */
      custom_fields?: {
        /**
         * Field name
         */
        field: string;
        /**
         * Field value
         */
        value: string;
      }[];
      /**
       * Optional notes with additional info about this shipping line
       */
      notes?: string;
    };
  }[];
}
/**
 * Sender's address
 */
export interface Address {
  /**
   * ZIP (CEP, postal...) code
   */
  zip: string;
  /**
   * Street or public place name
   */
  street?: string;
  /**
   * House or building street number
   */
  number?: number;
  /**
   * Address complement or second line, such as apartment number
   */
  complement?: string;
  /**
   * Borough name
   */
  borough?: string;
  /**
   * Some optional other reference for this address
   */
  near_to?: string;
  /**
   * Full in line mailing address, should include street, number and borough
   */
  line_address?: string;
  /**
   * City name
   */
  city?: string;
  /**
   * Country name
   */
  country?: string;
  /**
   * An ISO 3166-2 country code
   */
  country_code?: string;
  /**
   * Province or state name
   */
  province?: string;
  /**
   * The two-letter code for the province or state
   */
  province_code?: string;
  /**
   * The name of recipient, generally is the customer's name
   */
  name?: string;
  /**
   * The recipient's last name
   */
  last_name?: string;
  /**
   * Customer phone number for this mailing address
   */
  phone?: {
    /**
     * Country calling code (without +), defined by standards E.123 and E.164
     */
    country_code?: number;
    /**
     * The actual phone number, digits only
     */
    number: string;
  };
}
/**
 * Shipping address (recipient)
 */
export interface Address1 {
  /**
   * ZIP (CEP, postal...) code
   */
  zip: string;
  /**
   * Street or public place name
   */
  street?: string;
  /**
   * House or building street number
   */
  number?: number;
  /**
   * Address complement or second line, such as apartment number
   */
  complement?: string;
  /**
   * Borough name
   */
  borough?: string;
  /**
   * Some optional other reference for this address
   */
  near_to?: string;
  /**
   * Full in line mailing address, should include street, number and borough
   */
  line_address?: string;
  /**
   * City name
   */
  city?: string;
  /**
   * Country name
   */
  country?: string;
  /**
   * An ISO 3166-2 country code
   */
  country_code?: string;
  /**
   * Province or state name
   */
  province?: string;
  /**
   * The two-letter code for the province or state
   */
  province_code?: string;
  /**
   * The name of recipient, generally is the customer's name
   */
  name?: string;
  /**
   * The recipient's last name
   */
  last_name?: string;
  /**
   * Customer phone number for this mailing address
   */
  phone?: {
    /**
     * Country calling code (without +), defined by standards E.123 and E.164
     */
    country_code?: number;
    /**
     * The actual phone number, digits only
     */
    number: string;
  };
}
